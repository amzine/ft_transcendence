version: '3'
services:
    frontend:
        image: frontend
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile
        networks:
            - PongNetwork
        ports:
            - ${REACT_APP_FRONTEND_PORT}:${REACT_APP_FRONTEND_PORT}
        env_file:
            - frontend/.env
        restart: unless-stopped
        depends_on:
            - backend

    backend:
        image: backend
        container_name: backend
        build:
            context: ./backend
            dockerfile: Dockerfile
        networks:
            - PongNetwork
        ports:
            - ${REACT_APP_BACKEND_PORT}:${REACT_APP_BACKEND_PORT}
            - ${REACT_APP_CHAT_PORT}:${REACT_APP_CHAT_PORT}
            - ${REACT_APP_GAME_PORT}:${REACT_APP_GAME_PORT}
        env_file:
            - backend/.env
        restart: unless-stopped
        depends_on:
            - database
                                                                                                                                             
    database:
        image: postgres:14-alpine
        container_name: database
        environment:
            POSTGRES_USER: ${REACT_APP_POSTGRES_USER}
            POSTGRES_PASSWORD: ${REACT_APP_POSTGRES_PASSWORD}
            POSTGRES_DB: ${REACT_APP_POSTGRES_DB}
        volumes:
            - database:/var/lib/postgresql/data
        networks:
            - PongNetwork
        ports:
            - ${REACT_APP_DB_PORT}:${REACT_APP_DB_PORT}
        restart: unless-stopped

networks:
    PongNetwork:
        driver: bridge

volumes:
    database: